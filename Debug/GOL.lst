SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Felix\Desktop\casio_conways_game_of_life\casio_conways_game_of_life-main\GOL.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           GOL.c     1    /*****************************************************************/
           GOL.c     2    /*                                                               */
           GOL.c     3    /*   CASIO fx-9860G SDK Library                                  */
           GOL.c     4    /*                                                               */
           GOL.c     5    /*   File name : [ProjectName].c                                 */
           GOL.c     6    /*                                                               */
           GOL.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
           GOL.c     8    /*                                                               */
           GOL.c     9    /*****************************************************************/
           GOL.c    10    #include "fxlib.h"
           GOL.c    11    #include <stdio.h>
           GOL.c    12    
           GOL.c    13    void RenderArray(int x, int y, int array[8][8]){
P   00000000              _RenderArray:                    ; function: RenderArray
                                                           ; frame size=44
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
           GOL.c    14        int Ax = 0;
           GOL.c    15        int Ay = 0;
           GOL.c    16    
           GOL.c    17        for (Ax = 0; Ax < 8; Ax++){
    00000006 EC00                   MOV         #0,R12
    00000008 935F                   MOV.W       L406,R3    ; H'0100
    0000000A 2FB6                   MOV.L       R11,@-R15
    0000000C 2FA6                   MOV.L       R10,@-R15
    0000000E 2F96                   MOV.L       R9,@-R15
    00000010 2F86                   MOV.L       R8,@-R15
    00000012 6863                   MOV         R6,R8
    00000014 4F22                   STS.L       PR,@-R15
    00000016 383C                   ADD         R3,R8
    00000018 D92E                   MOV.L       L406+10,R9 ; _Bdisp_SetPoint_VRAM
    0000001A 7FF4                   ADD         #-12,R15
    0000001C 1F42                   MOV.L       R4,@(8,R15)
    0000001E 1F51                   MOV.L       R5,@(4,R15)
    00000020 2F62                   MOV.L       R6,@R15
    00000022              L383:                             
    00000022 6AC3                   MOV         R12,R10
    00000024 5BF2                   MOV.L       @(8,R15),R11
    00000026 4A08                   SHLL2       R10
    00000028 5DF1                   MOV.L       @(4,R15),R13
    0000002A 3BCC                   ADD         R12,R11
    0000002C 6EF2                   MOV.L       @R15,R14
           GOL.c    18            for (Ay = 0; Ay < 8; Ay++){
    0000002E              L384:                             
           GOL.c    19                Bdisp_SetPoint_VRAM(x + Ax, y + Ay, array[Ay][Ax]);
    0000002E 60A3                   MOV         R10,R0
    00000030 06EE                   MOV.L       @(R0,R14),R6
    00000032 65D3                   MOV         R13,R5
    00000034 490B                   JSR         @R9
    00000036 64B3                   MOV         R11,R4
    00000038 7E20                   ADD         #32,R14
    0000003A 3E82                   CMP/HS      R8,R14
    0000003C 8FF7                   BF/S        L384




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000003E 7D01                   ADD         #1,R13
    00000040 7C01                   ADD         #1,R12
    00000042 E208                   MOV         #8,R2
    00000044 3C23                   CMP/GE      R2,R12
    00000046 8BEC                   BF          L383
           GOL.c    20            }
           GOL.c    21        }
           GOL.c    22    }
    00000048 7F0C                   ADD         #12,R15
    0000004A 4F26                   LDS.L       @R15+,PR
    0000004C 68F6                   MOV.L       @R15+,R8
    0000004E 69F6                   MOV.L       @R15+,R9
    00000050 6AF6                   MOV.L       @R15+,R10
    00000052 6BF6                   MOV.L       @R15+,R11
    00000054 6CF6                   MOV.L       @R15+,R12
    00000056 6DF6                   MOV.L       @R15+,R13
    00000058 000B                   RTS
    0000005A 6EF6                   MOV.L       @R15+,R14
           GOL.c    23    
           GOL.c    24    // 0 -> 3 Lives -> 1
           GOL.c    25    // 1 -> < 2 Lives OR > 3 Lives -> 0
           GOL.c    26    // 1 -> 2 Lives OR 3 Lives -> 1
           GOL.c    27    
           GOL.c    28    
           GOL.c    29    //****************************************************************************
           GOL.c    30    //  AddIn_main (Sample program main function)
           GOL.c    31    //
           GOL.c    32    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
           GOL.c    33    //                        : 0 = This application is launched by a strip in eACT application.
           GOL.c    34    //
           GOL.c    35    //              OptionNum : Strip number (0~3)
           GOL.c    36    //                         (This parameter is only used when isAppli parameter is 0.)
           GOL.c    37    //
           GOL.c    38    //  retval  :   1 = No error / 0 = Error
           GOL.c    39    //
           GOL.c    40    //****************************************************************************
           GOL.c    41    int AddIn_main(int isAppli, unsigned short OptionNum)
    0000005C              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=816
                                                           ; used runtime library name:
                                                           ; __quick_mvn
    0000005C 9036                   MOV.W       L406+2,R0  ; H'FCD0
           GOL.c    42    {
           GOL.c    43        unsigned int key;
           GOL.c    44        int Ax = 0;
           GOL.c    45        int Ay = 0;
           GOL.c    46        int cellcount = 0;
           GOL.c    47        int wait = 0;
           GOL.c    48        int pauseg = 0;
    0000005E EC00                   MOV         #0,R12
           GOL.c    49        int cellsone[8][8] = {
           GOL.c    50            {0,0,0,0,0,0,0,0},
           GOL.c    51            {0,0,0,0,0,0,0,0},
           GOL.c    52            {0,0,1,1,1,0,0,0},
           GOL.c    53            {0,0,0,0,0,0,0,0},
           GOL.c    54            {0,0,0,0,0,0,0,0},
           GOL.c    55            {0,0,0,0,0,0,0,0},




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           GOL.c    56            {0,0,0,0,0,0,0,0},
           GOL.c    57            {0,0,0,0,0,0,0,0}
           GOL.c    58        };
    00000060 9B35                   MOV.W       L406+4,R11 ; H'0230
    00000062 3F0C                   ADD         R0,R15
    00000064 9133                   MOV.W       L406+4,R1  ; H'0230
    00000066 3BFC                   ADD         R15,R11
    00000068 D21B                   MOV.L       L406+14,R2 ; L357
    0000006A 1FC9                   MOV.L       R12,@(36,R15)
    0000006C 902D                   MOV.W       L406,R0    ; H'0100
    0000006E D31B                   MOV.L       L406+18,R3 ; __quick_mvn
    00000070 430B                   JSR         @R3
    00000072 31FC                   ADD         R15,R1
           GOL.c    59    
           GOL.c    60        int cellstwo[8][8] = {
           GOL.c    61            {0,0,0,0,0,0,0,0},
           GOL.c    62            {0,0,0,0,0,0,0,0},
           GOL.c    63            {0,0,0,0,0,0,0,0},
           GOL.c    64            {0,0,0,0,0,0,0,0},
           GOL.c    65            {0,0,0,0,0,0,0,0},
           GOL.c    66            {0,0,0,0,0,0,0,0},
           GOL.c    67            {0,0,0,0,0,0,0,0},
           GOL.c    68            {0,0,0,0,0,0,0,0}
           GOL.c    69        };
    00000074 982C                   MOV.W       L406+6,R8  ; H'0130
    00000076 38FC                   ADD         R15,R8
    00000078 912A                   MOV.W       L406+6,R1  ; H'0130
    0000007A D219                   MOV.L       L406+22,R2 ; L359
    0000007C 9025                   MOV.W       L406,R0    ; H'0100
    0000007E D317                   MOV.L       L406+18,R3 ; __quick_mvn
    00000080 430B                   JSR         @R3
    00000082 31FC                   ADD         R15,R1
           GOL.c    70    
           GOL.c    71        int celltest[8][8] = {
           GOL.c    72            {0,1,1,0,0,0,1,1},
           GOL.c    73            {1,0,0,1,0,0,1,1},
           GOL.c    74            {0,1,1,0,0,0,0,0},
           GOL.c    75            {0,0,0,0,0,1,0,0},
           GOL.c    76            {0,0,0,0,0,1,0,0},
           GOL.c    77            {0,0,1,0,0,1,0,0},
           GOL.c    78            {0,1,0,1,0,0,0,0},
           GOL.c    79            {0,0,1,1,0,0,0,0}
           GOL.c    80        };
    00000084 D217                   MOV.L       L406+26,R2 ; L361
    00000086 61F3                   MOV         R15,R1
    00000088 901F                   MOV.W       L406,R0    ; H'0100
    0000008A D314                   MOV.L       L406+18,R3 ; __quick_mvn
    0000008C 430B                   JSR         @R3
    0000008E 7130                   ADD         #48,R1
           GOL.c    81    
           GOL.c    82        Bdisp_AllClr_DDVRAM();
    00000090 D115                   MOV.L       L406+30,R1 ; _Bdisp_AllClr_DDVRAM
    00000092 410B                   JSR         @R1
    00000094 0009                   NOP
           GOL.c    83        RenderArray(5,5, cellsone);
    00000096 66B3                   MOV         R11,R6
    00000098 E505                   MOV         #5,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000009A BFB1                   BSR         _RenderArray
    0000009C 6453                   MOV         R5,R4
    0000009E 6283                   MOV         R8,R2
    000000A0 1F28                   MOV.L       R2,@(32,R15)
    000000A2 E901                   MOV         #1,R9
    000000A4 EA08                   MOV         #8,R10
    000000A6 63B3                   MOV         R11,R3
    000000A8 1F3B                   MOV.L       R3,@(44,R15)
           GOL.c    84    
           GOL.c    85        while(1){
    000000AA              L386:                             
           GOL.c    86            GetKey(&key);
    000000AA 64F3                   MOV         R15,R4
    000000AC D30F                   MOV.L       L406+34,R3 ; _GetKey
    000000AE 430B                   JSR         @R3
    000000B0 741C                   ADD         #28,R4
           GOL.c    87            RenderArray(5,5, cellsone);
    000000B2 66B3                   MOV         R11,R6
    000000B4 E505                   MOV         #5,R5
    000000B6 BFA3                   BSR         _RenderArray
    000000B8 6453                   MOV         R5,R4
           GOL.c    88            if(key==KEY_CHAR_DP && pauseg == 0){
    000000BA 50F7                   MOV.L       @(28,R15),R0
    000000BC 882E                   CMP/EQ      #46,R0
    000000BE 8B1E                   BF          L388
    000000C0 52F9                   MOV.L       @(36,R15),R2
    000000C2 2228                   TST         R2,R2
    000000C4 8B14                   BF          L387
           GOL.c    89                pauseg = 1;
    000000C6 A01A                   BRA         L388
    000000C8 1F99                   MOV.L       R9,@(36,R15)
    000000CA              L406:                             
    000000CA 0100                   .DATA.W     H'0100
    000000CC FCD0                   .DATA.W     H'FCD0
    000000CE 0230                   .DATA.W     H'0230
    000000D0 0130                   .DATA.W     H'0130
    000000D2 0000                   .DATA.W     0
    000000D4 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    000000D8 <00000000>             .DATA.L     L357
    000000DC <00000000>             .DATA.L     __quick_mvn
    000000E0 <00000000>             .DATA.L     L359
    000000E4 <00000000>             .DATA.L     L361
    000000E8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000000EC <00000000>             .DATA.L     _GetKey
    000000F0              L387:                             
           GOL.c    90            }else if (key==KEY_CHAR_DP && pauseg ==1){
    000000F0 50F7                   MOV.L       @(28,R15),R0
    000000F2 882E                   CMP/EQ      #46,R0
    000000F4 8B03                   BF          L388
    000000F6 50F9                   MOV.L       @(36,R15),R0
    000000F8 8801                   CMP/EQ      #1,R0
    000000FA 8B00                   BF          L388
           GOL.c    91                pauseg = 0;
    000000FC 1FC9                   MOV.L       R12,@(36,R15)
    000000FE              L388:                             
           GOL.c    92            }
           GOL.c    93    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           GOL.c    94            if (pauseg == 0){
    000000FE 53F9                   MOV.L       @(36,R15),R3
    00000100 2338                   TST         R3,R3
    00000102 8901                   BT          L407
    00000104 A09B                   BRA         L390
    00000106 0009                   NOP
    00000108              L407:                             
           GOL.c    95                for (Ax = 0; Ax < 8; Ax++){
    00000108 1FC1                   MOV.L       R12,@(4,R15)
    0000010A              L391:                             
           GOL.c    96                    for (Ay = 0; Ay < 8; Ay++){
    0000010A 65C3                   MOV         R12,R5
    0000010C 56F8                   MOV.L       @(32,R15),R6
    0000010E 6363                   MOV         R6,R3
    00000110 1F36                   MOV.L       R3,@(24,R15)
    00000112 57FB                   MOV.L       @(44,R15),R7
    00000114 5EF1                   MOV.L       @(4,R15),R14
    00000116 4E08                   SHLL2       R14
    00000118 5DF1                   MOV.L       @(4,R15),R13
    0000011A 7DFF                   ADD         #-1,R13
    0000011C 4D08                   SHLL2       R13
    0000011E              L392:                             
    0000011E 6453                   MOV         R5,R4
    00000120 4408                   SHLL2       R4
    00000122 4408                   SHLL2       R4
    00000124 4400                   SHLL        R4
    00000126 6353                   MOV         R5,R3
    00000128 73FF                   ADD         #-1,R3
    0000012A 4308                   SHLL2       R3
    0000012C 4308                   SHLL2       R3
    0000012E 4300                   SHLL        R3
    00000130 33BC                   ADD         R11,R3
    00000132 6043                   MOV         R4,R0
    00000134 1F35                   MOV.L       R3,@(20,R15)
    00000136 30BC                   ADD         R11,R0
    00000138 02EE                   MOV.L       @(R0,R14),R2
    0000013A 2228                   TST         R2,R2
    0000013C 8B29                   BF          L393
           GOL.c    97                        if (cellsone[Ay][Ax]==0){
           GOL.c    98                            cellcount = cellsone[Ay-1][Ax-1] + cellsone[Ay-1][Ax] + cellsone[Ay-1][Ax+1] +cell
                         +sone[Ay][Ax-1] + cellsone[Ay][Ax+1] + cellsone[Ay+1][Ax-1] +cellsone[Ay+1][Ax] + cellsone[Ay+1][Ax+1];
    0000013E 60D3                   MOV         R13,R0
    00000140 1F3A                   MOV.L       R3,@(40,R15)
    00000142 33DC                   ADD         R13,R3
    00000144 52FA                   MOV.L       @(40,R15),R2
    00000146 32EC                   ADD         R14,R2
    00000148 1F23                   MOV.L       R2,@(12,R15)
    0000014A 5221                   MOV.L       @(4,R2),R2
    0000014C 6332                   MOV.L       @R3,R3
    0000014E 332C                   ADD         R2,R3
    00000150 6243                   MOV         R4,R2
    00000152 32BC                   ADD         R11,R2
    00000154 2F22                   MOV.L       R2,@R15
    00000156 7220                   ADD         #32,R2
    00000158 1F22                   MOV.L       R2,@(8,R15)
    0000015A 022E                   MOV.L       @(R0,R2),R2
    0000015C 332C                   ADD         R2,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000015E 52F2                   MOV.L       @(8,R15),R2
    00000160 32EC                   ADD         R14,R2
    00000162 1F24                   MOV.L       R2,@(16,R15)
    00000164 5221                   MOV.L       @(4,R2),R2
    00000166 332C                   ADD         R2,R3
    00000168 52F3                   MOV.L       @(12,R15),R2
    0000016A 6222                   MOV.L       @R2,R2
    0000016C 60F2                   MOV.L       @R15,R0
    0000016E 332C                   ADD         R2,R3
    00000170 02DE                   MOV.L       @(R0,R13),R2
    00000172 332C                   ADD         R2,R3
    00000174 6203                   MOV         R0,R2
    00000176 32EC                   ADD         R14,R2
    00000178 5221                   MOV.L       @(4,R2),R2
    0000017A 332C                   ADD         R2,R3
    0000017C 52F4                   MOV.L       @(16,R15),R2
    0000017E 6222                   MOV.L       @R2,R2
    00000180 332C                   ADD         R2,R3
           GOL.c    99    
           GOL.c   100                            if (cellcount == 3){
    00000182 6033                   MOV         R3,R0
    00000184 2F32                   MOV.L       R3,@R15
    00000186 8803                   CMP/EQ      #3,R0
    00000188 8B37                   BF          L395
           GOL.c   101                                cellstwo[Ay][Ax] = 1;
    0000018A 6043                   MOV         R4,R0
    0000018C 308C                   ADD         R8,R0
    0000018E A034                   BRA         L395
    00000190 0E96                   MOV.L       R9,@(R0,R14)
    00000192              L393:                             
           GOL.c   102                            }
           GOL.c   103    
           GOL.c   104                        } else if (cellsone[Ay][Ax]==1){
    00000192 00EE                   MOV.L       @(R0,R14),R0
    00000194 8801                   CMP/EQ      #1,R0
    00000196 8B30                   BF          L395
           GOL.c   105                            cellcount = cellsone[Ay-1][Ax-1] + cellsone[Ay-1][Ax] + cellsone[Ay-1][Ax+1] +cell
                         +sone[Ay][Ax-1] + cellsone[Ay][Ax+1] + cellsone[Ay+1][Ax-1] +cellsone[Ay+1][Ax] + cellsone[Ay+1][Ax+1];
    00000198 1F33                   MOV.L       R3,@(12,R15)
    0000019A 60D3                   MOV         R13,R0
    0000019C 52F3                   MOV.L       @(12,R15),R2
    0000019E 33DC                   ADD         R13,R3
    000001A0 32EC                   ADD         R14,R2
    000001A2 1F22                   MOV.L       R2,@(8,R15)
    000001A4 5221                   MOV.L       @(4,R2),R2
    000001A6 6332                   MOV.L       @R3,R3
    000001A8 2F72                   MOV.L       R7,@R15
    000001AA 332C                   ADD         R2,R3
    000001AC 6273                   MOV         R7,R2
    000001AE 7220                   ADD         #32,R2
    000001B0 1F24                   MOV.L       R2,@(16,R15)
    000001B2 022E                   MOV.L       @(R0,R2),R2
    000001B4 54F4                   MOV.L       @(16,R15),R4
    000001B6 332C                   ADD         R2,R3
    000001B8 60F2                   MOV.L       @R15,R0
    000001BA 34EC                   ADD         R14,R4
    000001BC 5241                   MOV.L       @(4,R4),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001BE 332C                   ADD         R2,R3
    000001C0 52F2                   MOV.L       @(8,R15),R2
    000001C2 6222                   MOV.L       @R2,R2
    000001C4 332C                   ADD         R2,R3
    000001C6 02DE                   MOV.L       @(R0,R13),R2
    000001C8 332C                   ADD         R2,R3
    000001CA 6203                   MOV         R0,R2
    000001CC 32EC                   ADD         R14,R2
    000001CE 5221                   MOV.L       @(4,R2),R2
    000001D0 332C                   ADD         R2,R3
    000001D2 6242                   MOV.L       @R4,R2
    000001D4 332C                   ADD         R2,R3
    000001D6 6433                   MOV         R3,R4
           GOL.c   106    
           GOL.c   107                            if(cellcount == 2 || cellcount == 3){
    000001D8 6033                   MOV         R3,R0
    000001DA 8802                   CMP/EQ      #2,R0
    000001DC 8902                   BT          L398
    000001DE 6043                   MOV         R4,R0
    000001E0 8803                   CMP/EQ      #3,R0
    000001E2 8B02                   BF          L397
    000001E4              L398:                             
           GOL.c   108                                cellstwo[Ay][Ax] = 1;
    000001E4 50F6                   MOV.L       @(24,R15),R0
    000001E6 A008                   BRA         L395
    000001E8 0E96                   MOV.L       R9,@(R0,R14)
    000001EA              L397:                             
           GOL.c   109                            }else if(cellcount < 2 || cellcount > 3){
    000001EA E202                   MOV         #2,R2
    000001EC 3423                   CMP/GE      R2,R4
    000001EE 8B02                   BF          L401
    000001F0 E103                   MOV         #3,R1
    000001F2 3417                   CMP/GT      R1,R4
    000001F4 8B01                   BF          L395
    000001F6              L401:                             
           GOL.c   110                                cellstwo[Ay][Ax] = 0;
    000001F6 60E3                   MOV         R14,R0
    000001F8 06C6                   MOV.L       R12,@(R0,R6)
    000001FA              L395:                             
    000001FA 7501                   ADD         #1,R5
    000001FC 52F6                   MOV.L       @(24,R15),R2
    000001FE 7620                   ADD         #32,R6
    00000200 7220                   ADD         #32,R2
    00000202 35A3                   CMP/GE      R10,R5
    00000204 1F26                   MOV.L       R2,@(24,R15)
    00000206 8F8A                   BF/S        L392
    00000208 7720                   ADD         #32,R7
    0000020A 52F1                   MOV.L       @(4,R15),R2
    0000020C 7201                   ADD         #1,R2
    0000020E 32A3                   CMP/GE      R10,R2
    00000210 8D02                   BT/S        L408
    00000212 1F21                   MOV.L       R2,@(4,R15)
    00000214 AF79                   BRA         L391
    00000216 0009                   NOP
    00000218              L408:                             
           GOL.c   111                            }
           GOL.c   112                        }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           GOL.c   113                    }
           GOL.c   114                }
           GOL.c   115    
           GOL.c   116                for (Ax = 0; Ax < 8; Ax++){
    00000218 66C3                   MOV         R12,R6
    0000021A              L402:                             
           GOL.c   117                    for (Ay = 0; Ay < 8; Ay++){
    0000021A 65C3                   MOV         R12,R5
    0000021C 64C3                   MOV         R12,R4
    0000021E 6E63                   MOV         R6,R14
    00000220 4E08                   SHLL2       R14
    00000222              L403:                             
           GOL.c   118                        cellsone[Ay][Ax] = cellstwo[Ay][Ax];
    00000222 6043                   MOV         R4,R0
    00000224 30BC                   ADD         R11,R0
    00000226 6343                   MOV         R4,R3
    00000228 338C                   ADD         R8,R3
    0000022A 33EC                   ADD         R14,R3
    0000022C 6232                   MOV.L       @R3,R2
    0000022E 7501                   ADD         #1,R5
    00000230 0E26                   MOV.L       R2,@(R0,R14)
    00000232 35A3                   CMP/GE      R10,R5
    00000234 8FF5                   BF/S        L403
    00000236 7420                   ADD         #32,R4
    00000238 7601                   ADD         #1,R6
    0000023A 36A3                   CMP/GE      R10,R6
    0000023C 8BED                   BF          L402
    0000023E              L390:                             
           GOL.c   119                    }
           GOL.c   120                }
           GOL.c   121                
           GOL.c   122            }
           GOL.c   123    
           GOL.c   124            Sleep(wait);
    0000023E D306                   MOV.L       L409+2,R3  ; _Sleep
    00000240 430B                   JSR         @R3
    00000242 E400                   MOV         #0,R4
           GOL.c   125            Bdisp_AllClr_DDVRAM();
    00000244 D205                   MOV.L       L409+6,R2  ; _Bdisp_AllClr_DDVRAM
    00000246 420B                   JSR         @R2
    00000248 0009                   NOP
           GOL.c   126            //Sleep(500);
           GOL.c   127            RenderArray(5,5, cellstwo);
    0000024A 6683                   MOV         R8,R6
    0000024C E505                   MOV         #5,R5
    0000024E BED7                   BSR         _RenderArray
    00000250 6453                   MOV         R5,R4
    00000252 AF2A                   BRA         L386
    00000254 0009                   NOP
    00000256              L409:                             
    00000256 0000                   .DATA.W     0
    00000258 <00000000>             .DATA.L     _Sleep
    0000025C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
           GOL.c   128        }
           GOL.c   129    
           GOL.c   130        return 1;
           GOL.c   131    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

           GOL.c   132    
           GOL.c   133    
           GOL.c   134    
           GOL.c   135    
           GOL.c   136    //****************************************************************************
           GOL.c   137    //**************                                              ****************
           GOL.c   138    //**************                 Notice!                      ****************
           GOL.c   139    //**************                                              ****************
           GOL.c   140    //**************  Please do not change the following source.  ****************
           GOL.c   141    //**************                                              ****************
           GOL.c   142    //****************************************************************************
           GOL.c   143    
           GOL.c   144    
           GOL.c   145    #pragma section _BR_Size
           GOL.c   146    unsigned long BR_Size;
           GOL.c   147    #pragma section
           GOL.c   148    
           GOL.c   149    
           GOL.c   150    #pragma section _TOP
           GOL.c   151    
           GOL.c   152    //****************************************************************************
           GOL.c   153    //  InitializeSystem
           GOL.c   154    //
           GOL.c   155    //  param   :   isAppli   : 1 = Application / 0 = eActivity
           GOL.c   156    //              OptionNum : Option Number (only eActivity)
           GOL.c   157    //
           GOL.c   158    //  retval  :   1 = No error / 0 = Error
           GOL.c   159    //
           GOL.c   160    //****************************************************************************
           GOL.c   161    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
           GOL.c   162    {
           GOL.c   163        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L410+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L410:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
           GOL.c   164    }
           GOL.c   165    
           GOL.c   166    #pragma section
           GOL.c   167    
C   00000000              L357:
    00000000 0000000000             .DATA.L     H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000001,H'00000001,H'00000001,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0100000001   
             0000000100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00           
    00000100              L359:
    00000100 0000000000             .DATA.L     H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00           
    00000200              L361:
    00000200 0000000000             .DATA.L     H'00000000,H'00000001,H'00000001,H'00000000,H'00000000,H'00000000,H'00000001,
             0000010000 +                       H'00000001,H'00000001,H'00000000,H'00000000,H'00000001,H'00000000,H'00000000,
             0001000000 +                       H'00000001,H'00000001,H'00000000,H'00000001,H'00000001,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000001,H'00000000,H'00000000,H'00000000,H'00000000,H'00000000,
             0000010000 +                       H'00000000,H'00000000,H'00000001,H'00000000,H'00000000,H'00000000,H'00000000,
             0001000000 +                       H'00000001,H'00000000,H'00000000,H'00000001,H'00000000,H'00000000,H'00000000,
             0100000000 +                       H'00000001,H'00000000,H'00000001,H'00000000,H'00000000,H'00000000,H'00000000,
             0000000000 +                       H'00000000,H'00000000,H'00000001,H'00000001,H'00000000,H'00000000,H'00000000,
             0000010000 +                       H'00000000
             0000000000   
             0000000001   
             0000000100   
             0000000000   
             0001000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0000000100   
             0000000000   
             0000000000   
             0000000001   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000001   
             0000000000   
             0000000000   
             0000000000   
             00           
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1



























SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 29-Jul-2023 18:17:44  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      167



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000260 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000300 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000570 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            6
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           4
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            33






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Felix\AppData\Local\Temp\hmkB30B.tmp 

